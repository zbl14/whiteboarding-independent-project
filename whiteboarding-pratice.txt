Question #5: Array Sorting
Write an algorithm that sorts an array without using the sort() method. There are many different sorting algorithms — take the time to read about the following:

Quick sort
Merge sort
Heap sort
Insertion sort
Bubble sort
Selection sort
You may implement any of the above algorithms (or your own) to solve the problem — as long as it doesn't use sort().

Example
Input: [9, 2, 7, 12]

Output: [2, 7, 9, 12]

// never empty array
// only positive number 
// using javascript

// set privot for the arry
// compare each nums in the arry with this privot, if nums < prvivot, put on the left side, if nums > privot ,put nums on the right side
// resusive function 


const swap (arr, i, j) {
	return arr[i], arr[j]] = [arr[j], arr[i]]
}

const partition(arr, l , r) {
  const privot = arr[r];                // privot = 12												// privot =12 		
  let i = l - 1;											  // i = -1																
  for(let j = l, j < arr.lenght, j++){  // j = 0															//j =1																//j = 2																//j =3
  	if(arr[j] < privot) { 							//arr[0] = 9 < 12, true								//arr[1] = 9 < 12											//arr[2] = 7 < 12											//arr[3] = 12		
  		i++;															// i = 0															//i = 1																//i = 2													
  		swap(arr, i, j);									// i = 0, j=1 => [2, 9, 7 , 12] 			//i = 1, j = 1 => [2, 9 ,7 ,12]				// i = 2 , j = 2 => [2, 9, 7, 12]
	  }
  }
  swap(arr, i+1, r)																																																															// [2, 9 , 7, 12]
  return i + 1;
}


const quickSort = (arr, l, r) => {
	if(l < r){
  	let pi = partition(arr, l, r);
    quickSort (arr, l, pi - 1); // find all the number less than privot, put it on the leftside
    quickSort (arr, pi + 1, r); // find all the numbers larger than privot, put it on the rightside
  }
  return arr;
};

